{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./apps/api/src/app/app.controller.ts","webpack:///./apps/api/src/app/app.module.ts","webpack:///./apps/api/src/app/app.service.ts","webpack:///./apps/api/src/app/controllers/controllers.module.ts","webpack:///./apps/api/src/app/controllers/getDeals/getDeals.controller.ts","webpack:///./apps/api/src/app/controllers/getDeals/getDeals.service.ts","webpack:///./apps/api/src/app/controllers/getGameCount/getGameCount.controller.ts","webpack:///./apps/api/src/app/controllers/getGameCount/getGameCount.service.ts","webpack:///./apps/api/src/app/controllers/getGames/getGames.controller.ts","webpack:///./apps/api/src/app/controllers/getGames/getGames.service.ts","webpack:///./apps/api/src/app/controllers/getUser/getUser.controller.ts","webpack:///./apps/api/src/app/controllers/getUser/getUser.service.ts","webpack:///./apps/api/src/app/controllers/getUsers/getUsers.controller.ts","webpack:///./apps/api/src/app/controllers/getUsers/getUsers.service.ts","webpack:///./apps/api/src/main.ts","webpack:///./libs/api-errors/src/index.ts","webpack:///./libs/api-errors/src/lib/api-errors.ts","webpack:///./libs/api-mongoose-models/src/index.ts","webpack:///./libs/api-mongoose-models/src/lib/api-mongoose-models.ts","webpack:///./libs/constants/constants.ts","webpack:///./libs/constants/functions.ts","webpack:///./libs/constants/index.ts","webpack:///./libs/constants/playing/constants.ts","webpack:///./libs/constants/playing/functions.ts","webpack:///./libs/interfaces-and-types/src/index.ts","webpack:///./libs/interfaces-and-types/src/lib/both-types.ts","webpack:///./libs/interfaces-and-types/src/lib/frontend-types.ts","webpack:///./libs/store/src/index.ts","webpack:///./libs/store/src/lib/actions/deal.actions.ts","webpack:///./libs/store/src/lib/actions/filter.actions.ts","webpack:///./libs/store/src/lib/actions/game.actions.ts","webpack:///./libs/store/src/lib/actions/general.actions.ts","webpack:///./libs/store/src/lib/actions/user.actions.ts","webpack:///./libs/store/src/lib/reducers/app.reducer.ts","webpack:///./libs/store/src/lib/reducers/deal.reducer.ts","webpack:///./libs/store/src/lib/reducers/filter.reducer.ts","webpack:///./libs/store/src/lib/reducers/game.reducer.ts","webpack:///./libs/store/src/lib/reducers/general.reducer.ts","webpack:///./libs/store/src/lib/reducers/user.reducer.ts","webpack:///external \"@angular/core\"","webpack:///external \"@nestjs/common\"","webpack:///external \"@nestjs/core\"","webpack:///external \"@nestjs/mongoose\"","webpack:///external \"@nestjs/serve-static\"","webpack:///external \"dotenv\"","webpack:///external \"mongoose\"","webpack:///external \"path\"","webpack:///external \"tslib\""],"names":[],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { Controller } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n}\n","import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { ControllersModule } from './controllers/controllers.module';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport * as dotenv from 'dotenv';\nimport { ServeStaticModule } from '@nestjs/serve-static'; // <- INSERT LINE\nimport { join } from 'path'; // <- INSERT LINE\ndotenv.config();\n\n@Module({\n  imports: [\n    ControllersModule,\n    MongooseModule.forRoot(\n      process.env.mongoDB_URI,\n    ),\n    ServeStaticModule.forRoot({\n      rootPath: join(__dirname, '..', 'frontend'),\n      exclude: ['/api*']\n    }),\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n","import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n}\n","import {\n  GameSchema,\n  DealSchema,\n  UserSchema,\n} from '@nx-bridge/api-mongoose-models';\n\nimport { Module } from '@nestjs/common';\nimport { GetUserController } from './getUser/getUser.controller';\nimport { GetUsersController } from './getUsers/getUsers.controller';\nimport { GetGamesController } from './getGames/getGames.controller';\nimport { GetGameCountController } from './getGameCount/getGameCount.controller';\nimport { GetUserService } from './getUser/getUser.service';\nimport { GetUsersService } from './getUsers/getUsers.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { GetGamesService } from './getGames/getGames.service';\nimport { GetDealsController } from './getDeals/getDeals.controller';\nimport { GetDealsService } from './getDeals/getDeals.service';\nimport { GetGameCountService } from './getGameCount/getGameCount.service';\n\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: 'Game', schema: GameSchema },\n      { name: 'Deal', schema: DealSchema },\n      { name: 'User', schema: UserSchema },\n    ]),\n  ],\n  controllers: [\n    GetUserController,\n    GetUsersController,\n    GetGamesController,\n    GetDealsController,\n    GetGameCountController,\n  ],\n  providers: [\n    GetUserService,\n    GetUsersService,\n    GetGamesService,\n    GetDealsService,\n    GetGameCountService,\n  ],\n})\nexport class ControllersModule {}\n","import { Query, Get, Param, Post, Body } from '@nestjs/common';\nimport { Controller } from '@nestjs/common';\nimport { GET_DEALS_CONTROLLER_STRING, USER_ID_STRING, DEALS_STRING } from '@nx-bridge/constants';\nimport { ControllerResponse, DealRelevant, DealRequest, FetchedDeals } from '@nx-bridge/interfaces-and-types';\nimport { GetDealsService } from './getDeals.service';\n\n@Controller(GET_DEALS_CONTROLLER_STRING)\nexport class GetDealsController {\n  constructor(private readonly getDealsService: GetDealsService) {}\n\n  @Get()\n  async getDeals(\n    @Query(USER_ID_STRING) userId: string\n  ): ControllerResponse<FetchedDeals> {\n    return await this.getDealsService.getDeals(userId);\n  }\n\n  @Get(':dealId')\n  async getDeal(\n    @Param('dealId') dealId: string\n  ): ControllerResponse<DealRelevant> {\n    return await this.getDealsService.getDeal(dealId);\n  }\n\n  @Post()\n  async getDealsInfo(\n    @Body(DEALS_STRING) requestedDeals: DealRequest\n  ): ControllerResponse<FetchedDeals> {\n    console.log('deals------------------------------------------------');\n    return await this.getDealsService.getDealsInfo(requestedDeals);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { DealModel } from '@nx-bridge/api-mongoose-models';\nimport { Model } from 'mongoose';\nimport { ControllerResponse, Deal, DealRelevant, DealRequest, ErrorMessage, FetchedDeals } from '@nx-bridge/interfaces-and-types';\nimport { getMongooseObjsFromRequestedDeals } from '@nx-bridge/constants';\n\n@Injectable({ providedIn: 'root'})\nexport class GetDealsService {\n  private shouldReturnScoringDefault = true;\n\n  constructor(\n    @InjectModel('Deal') private DealsModel: Model<DealModel>,\n  ) {}\n\n  async getDeals(userId: string): ControllerResponse<FetchedDeals> {\n    if (!userId) {\n      return new Promise((res, rej) => {\n        res({message: \"Invalid user id given in getDeals\", status: 400} as ErrorMessage);\n      }) \n    } else {\n      const deals = await this.DealsModel.find({players: userId});\n      return this.removeUnnecessaryDataFromDeals(deals, null);\n    }\n  }\n\n  async getDeal(requestedDeal: string): ControllerResponse<DealRelevant> {\n    if (!requestedDeal) {\n      return new Promise((res, rej) => {\n        res({message: \"Invalid deal id given in getDeal\", status: 400} as ErrorMessage);\n      }) \n    } else {\n      const deal = await this.DealsModel.findOne({_id: requestedDeal});\n      return this.getNewDeal(deal);\n    }\n  }\n\n  async getDealsInfo(requestedDeals: DealRequest): ControllerResponse<FetchedDeals> {\n    try {\n      console.log('requestedDeals =', requestedDeals);\n      if (!requestedDeals) return this.getErrorResponse();\n      const dealsAsStrings = Object.keys(requestedDeals);\n      const mongooseObjs = getMongooseObjsFromRequestedDeals(dealsAsStrings);\n      console.log('mongooseObjs =', mongooseObjs);\n      const dealsToReturn = await this.DealsModel.find({_id: {$in: mongooseObjs}});\n      return this.removeUnnecessaryDataFromDeals(dealsToReturn, requestedDeals);\n    } catch (err) {\n      return this.getErrorResponse();\n    }\n  }\n\n  private getErrorResponse(): Promise<ErrorMessage> { \n    return new Promise((res, rej) => {\n      res({message: \"Error in getDealsInfo\", status: 400} as ErrorMessage);\n    }) \n  }\n\n  private getNewDeal(deal: DealModel | Deal, shouldAddScoring = this.shouldReturnScoringDefault) {\n    const newDeal: DealRelevant = {\n      bids: deal.bids,\n      contract: deal.contract,\n      cardPlayOrder: deal.cardPlayOrder,\n      dealer: deal.dealer,\n      declarer: deal.declarer,\n      doubleValue: deal.doubleValue,\n      hands: deal.hands,\n      roundWinners: deal.roundWinners,\n      _id: deal._id,\n    }\n\n    if (shouldAddScoring) {\n      newDeal['northSouth'] = deal.northSouth;\n      newDeal['eastWest'] = deal.eastWest;\n    }\n\n    return newDeal;\n  }\n\n  private removeUnnecessaryDataFromDeals(deals: Deal[], requestedDeals: DealRequest | null) {\n    const toReturn: FetchedDeals = {} as FetchedDeals;\n\n    for (let i = 0; i < deals.length; i++) {\n      const deal = deals[i];\n      const shouldAddScoring = requestedDeals[deal._id];\n      const newDeal = this.getNewDeal(deal, shouldAddScoring);\n      toReturn[deal._id] = newDeal;\n    }\n\n    return toReturn;\n  }\n}\n","import { Query, Get } from '@nestjs/common';\nimport { Controller } from '@nestjs/common';\nimport { GET_GAME_COUNT_CONTROLLER_STRING, USER_ID_STRING } from '@nx-bridge/constants';\nimport { ControllerResponse } from '@nx-bridge/interfaces-and-types';\nimport { GetGameCountService } from './getGameCount.service';\n\n@Controller(GET_GAME_COUNT_CONTROLLER_STRING)\nexport class GetGameCountController {\n  constructor(private readonly getGameCountService: GetGameCountService) {}\n\n  @Get()\n  async getGameCount(\n    @Query(USER_ID_STRING) userId: string\n  ): ControllerResponse<number> {\n    return await this.getGameCountService.getGameCount(userId);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { GameModel } from '@nx-bridge/api-mongoose-models';\nimport {\n  ControllerResponse,\n  ErrorMessage,\n} from '@nx-bridge/interfaces-and-types';\nimport { Model } from 'mongoose';\n\n@Injectable({ providedIn: 'root' })\nexport class GetGameCountService {\n  constructor(@InjectModel('Game') private gamesModel: Model<GameModel>) {}\n\n  async getGameCount(userId: string): ControllerResponse<number> {\n    try {\n      if (userId === undefined || userId === null)\n        return this.getErrorResponse();\n      return await this.gamesModel.countDocuments({ players: userId });\n    } catch (err) {\n      console.log('err =', err);\n      return this.getErrorResponse();\n    }\n  }\n\n  private getErrorResponse(): Promise<ErrorMessage> {\n    return new Promise((res, rej) => {\n      res({ message: 'Error in getGameCount', status: 400 });\n    });\n  }\n}\n","import { Query, Get, Param } from '@nestjs/common';\nimport { Controller } from '@nestjs/common';\nimport { GET_GAMES_CONTROLLER_STRING, GET_GAMES_LAST_STRING } from '@nx-bridge/constants';\nimport { ControllerResponse, GameRelevant } from '@nx-bridge/interfaces-and-types';\nimport { GetGamesService } from './getGames.service';\nimport { USER_ID_STRING } from '@nx-bridge/constants';\n\n\n@Controller(GET_GAMES_CONTROLLER_STRING)\nexport class GetGamesController {\n  constructor(private readonly getGamesService: GetGamesService) {}\n\n  @Get()\n  async getGames(\n    @Query(USER_ID_STRING) userId: string,\n    @Query(GET_GAMES_LAST_STRING) lastGamesToGet: string,\n  ): ControllerResponse<GameRelevant> {\n    return await this.getGamesService.getGames(userId, lastGamesToGet);\n  }\n\n  @Get(':gameId')\n  async getGame(\n    @Param('gameId') gameId: string\n  ): ControllerResponse<GameRelevant> {\n    return await this.getGamesService.getGame(gameId);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { GameModel } from '@nx-bridge/api-mongoose-models';\nimport { ControllerResponse, ErrorMessage, Game, GameRelevant, RoomRelevant } from '@nx-bridge/interfaces-and-types';\nimport { Model } from 'mongoose';\n\n@Injectable({ providedIn: 'root'})\nexport class GetGamesService {\n\n  constructor(\n    @InjectModel('Game') private gamesModel: Model<GameModel>,\n  ) {}\n\n  async getGames(userId: string, lastGamesToGet: string): ControllerResponse<GameRelevant> {\n    try {\n      if (lastGamesToGet) {\n        const games = await this.gamesModel.find({players: userId}).sort({completionDate: -1}).limit(+lastGamesToGet).exec();\n        return this.removeUnnecessaryDataFromGames(games);\n      } else {\n        const games = await this.gamesModel.find({players: userId}).exec();\n        return this.removeUnnecessaryDataFromGames(games);\n      }\n    } catch (err) {\n      return this.getErrorResponse();\n    }\n  }\n\n  async getGame(gameId: string): ControllerResponse<GameRelevant> {\n    try {\n      const game = await this.gamesModel.findOne({_id: gameId}).exec();\n      return this.getNewGame(game);\n    } catch (err) {\n      console.log('err =', err);\n      return new Promise((res, rej) => {\n        res({message: \"Error in getGame\", status: 400});\n      }) \n    }\n  }\n\n  private getErrorResponse(): Promise<ErrorMessage> {\n    return new Promise((res, rej) => {\n      res({message: \"Error in getGames\", status: 400});\n    });\n  }\n\n  private getNewGame(game: GameModel | Game) {\n    const newRoom: RoomRelevant = {\n      name: game.room.name,\n      seating: game.room.seating,\n    }\n\n    const newGame: GameRelevant = {\n      deals: game.deals,\n      players: game.players,\n      completionDate: game.completionDate,\n      room: newRoom,\n      _id: (game as any)._id,\n    }\n\n    return newGame;\n  }\n\n  private removeUnnecessaryDataFromGames(games: Game[]) {\n    const toReturn: GameRelevant[] = [];\n    // -only send back relevant info on each game (deals,players, completionDate, room.name, room.seating, _id)\n\n    for (let i = 0; i < games.length; i++) {\n      const game = games[i];\n      const newGame = this.getNewGame(game);\n      toReturn.push(newGame);\n    }\n\n    return toReturn;\n  }\n}\n","import { Body, Post } from '@nestjs/common';\nimport { Controller } from '@nestjs/common';\nimport { UserModel } from '@nx-bridge/api-mongoose-models';\nimport { GET_USER_CONTROLLER_STRING, USERNAME_STRING, EMAIL_STRING } from '@nx-bridge/constants';\nimport { ControllerResponse, GetUserResponse } from '@nx-bridge/interfaces-and-types';\nimport { GetUserService } from './getUser.service';\n\n@Controller(GET_USER_CONTROLLER_STRING)\nexport class GetUserController {\n  constructor(private readonly getUserService: GetUserService) {}\n\n  @Post()\n  async getData(\n    @Body(USERNAME_STRING) username: string,\n    @Body(EMAIL_STRING) email: string\n  ): ControllerResponse<GetUserResponse | UserModel> {\n    return await this.getUserService.getUser(username, email);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { INVALID_CREDENTIALS } from '@nx-bridge/api-errors';\nimport { UserModel } from '@nx-bridge/api-mongoose-models';\nimport {\n  ControllerResponse,\n  ErrorMessage,\n  GetUserResponse,\n} from '@nx-bridge/interfaces-and-types';\nimport { Model } from 'mongoose';\n\n@Injectable({ providedIn: 'root' })\nexport class GetUserService {\n  constructor(@InjectModel('User') private userModel: Model<UserModel>) {}\n\n  async getUser(\n    username: string,\n    email: string\n  ): ControllerResponse<GetUserResponse | UserModel> {\n    try {\n      const error = this.validateInputs(username, email);\n      if (error) return error;\n\n      const response = (await this.queryDB(username, email)) as UserModel;\n      if (response)\n        return { id: (response as any)._id, username: response.username };\n      return response;\n      \n    } catch (err) {\n      return this.getErrorResponse();\n    }\n  }\n\n  private validateInputs(username: string, email: string) {\n    if (!email && !username) {\n      return { message: INVALID_CREDENTIALS, status: 400 };\n    }\n\n    return null;\n  }\n\n  private async queryDB(\n    username: string,\n    email: string\n  ): ControllerResponse<UserModel> {\n    if (username) return await this.getUserFromUserName(username);\n    else if (email) return await this.getUserFromEmail(email);\n  }\n\n  private async getUserFromUserName(username: string) {\n    return await this.userModel.findOne({ username }).exec();\n  }\n\n  private async getUserFromEmail(email: string) {\n    return await this.userModel.findOne({ email }).exec();\n  }\n\n  private getErrorResponse(): Promise<ErrorMessage> {\n    return new Promise((res, rej) => {\n      res({ message: 'Error in getUser', status: 400 });\n    });\n  }\n}\n","import { Body, Post } from '@nestjs/common';\nimport { Controller } from '@nestjs/common';\nimport { GET_USERS_CONTROLLER_STRING, USERS_STRING } from '@nx-bridge/constants';\nimport { ControllerResponse, User } from '@nx-bridge/interfaces-and-types';\nimport { GetUsersService } from './getUsers.service';\n\n@Controller(GET_USERS_CONTROLLER_STRING)\nexport class GetUsersController {\n  constructor(private getUsersService: GetUsersService) {}\n\n  @Post()\n  async getData(\n    @Body(USERS_STRING) users: string[],\n  ): ControllerResponse<User | {[key:string]: string}> {\n    return await this.getUsersService.getUsers(users);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { INVALID_USERS_ARRAY } from '@nx-bridge/api-errors';\nimport { ControllerResponse, ErrorMessage, User } from '@nx-bridge/interfaces-and-types';\nimport { Model } from 'mongoose';\nimport {getMongooseObjsFromRequestedDeals} from '@nx-bridge/constants';\n\n@Injectable({ providedIn: 'root'})\nexport class GetUsersService {\n\n  constructor(\n    @InjectModel('User') private userModel: Model<User>,\n  ) {}\n\n  async getUsers(users): ControllerResponse<User | {[key:string]: string}> {\n    try {\n      const error = this.validateInputs(users);\n      if (error) return error;\n      return await this.queryDB(users);\n    } catch(err) {\n      console.log('err =', err);\n      this.getErrorResponse();\n    }\n\n  }\n\n  private validateInputs(users: string[]) {\n    if (!users || users.length < 0) {\n      return { message: INVALID_USERS_ARRAY, status: 400 };\n    }\n\n    return null;\n  }\n\n  private async queryDB(users: string[]): ControllerResponse<User | {[key:string]: string}> {\n    const mongooseObjs = getMongooseObjsFromRequestedDeals(users);\n    const response = await this.userModel.find({_id: {$in: mongooseObjs}});\n    // const newResponse = response.map(userObj => {return {...(userObj as any)._doc, salt: null, hash: null, email: null, resetPasswordToken: null} as User})\n    return response.map(userObj =>  { \n      return {[userObj._id]: userObj.username};\n    });\n  }\n\n  private getErrorResponse(): Promise<ErrorMessage> {\n    return new Promise((res, rej) => {\n      res({ message: 'Error in getUsers()', status: 400 });\n    });\n  }\n}\n","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\n\nimport { Logger } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\n\nimport { AppModule } from './app/app.module';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  const globalPrefix = 'api';\n  app.enableCors();\n  app.setGlobalPrefix(globalPrefix);\n  const port = process.env.PORT || 3333;\n  await app.listen(port, () => {\n    Logger.log('Listening at http://localhost:' + port + '/' + globalPrefix);\n  });\n}\n\nbootstrap();\n","export * from './lib/api-errors';\n","export const INVALID_CREDENTIALS = 'Please enter a valid username or email.';\nexport const INVALID_USERS_ARRAY = 'Please enter a valid list of userId strings';\nexport const ERROR_APPENDING_GAMES = 'Error appending games to localStorageUser';","export * from './lib/api-mongoose-models';\n","import * as mongoose from 'mongoose';\n\nimport { Game, User, Deal } from '@nx-bridge/interfaces-and-types';\n\nexport const DealSchema = new mongoose.Schema({\n    players: [\n        {type: mongoose.Schema.Types.ObjectId, ref: 'User'},\n    ],\n    cardPlayOrder: [\n        {type: Array, default: []},\n    ],\n    hands: {},\n    roundWinners: [\n        {type: Array, default: []},\n    ],\n    declarer: {\n        type: mongoose.Schema.Types.ObjectId,\n        ref: \"User\",\n    },\n    dealer: {\n        type: mongoose.Schema.Types.ObjectId,\n        ref: \"User\",\n    },\n    bids: [\n        {type: Array, default: []},\n    ],\n    contract: {type: String, default: \"\"},\n    northSouth: {\n        aboveTheLine: {type: Number, default: 0},\n        belowTheLine: {type: Number, default: 0},\n        totalBelowTheLineScore: {type: Number, default: 0},\n        isVulnerable: {type: Boolean, default: false},\n        vulnerableTransitionIndex: {type: Number, default: null},\n    },\n    eastWest: {\n        aboveTheLine: {type: Number, default: 0},\n        belowTheLine: {type: Number, default: 0},\n        totalBelowTheLineScore: {type: Number, default: 0},\n        isVulnerable: {type: Boolean, default: false},\n        vulnerableTransitionIndex: {type: Number, default: null},\n    },\n    redealCount: {type: Number, default: 0},\n    dealSummary: {\n        contractPoints: {type: Number, default: 0},\n        overTrickPoints: {type: Number, default: 0},\n        underTrickPoints: {type: Number, default: 0},\n        rubberBonus: {type: Number, default: 0},\n        honorPoints: {type: Number, default: null},\n    },\n    doubleValue: {type: Number, default: null},\n});\n\nexport const GameSchema = new mongoose.Schema({\n  deals: [\n      {\n          type: mongoose.Schema.Types.ObjectId,\n          ref: \"Deal\",\n      },\n  ],\n  room: {},\n  //winner is the team whose last item is >= 100 in gameRoundEndingScores\n  gameRoundEndingScores: {   \n      northSouth: [],\n      eastWest: [],\n  },\n  startDate: {type: Number, default: Date.now()},\n  completionDate: {type: Number, default: Date.now()},\n  players: [\n      {type: mongoose.Schema.Types.ObjectId, ref: 'User'},\n  ],\n  points: {},\n});\n\nexport const UserSchema = new mongoose.Schema({\n    username: {type: String, unique: true, required: true},\n    password: {type: String, unique: false, required: false},\n    email: {type: String, unique: true, required: true},\n    // zipCode: {type: Number, unique: false, required: false},\n    preferences: {\n        sound: {\n            isEnabled: {type: Boolean, default: false},\n            defaultVolume: {type: Number, default: .15},\n            shotgunLoad: {type: String, default: 'shotgunLoad'},\n            isYourTurnHand: {type: String, default: 'gongFull'},\n            isYourTurnExposed: {type: String, default: 'beepFourTimes'},\n            userPlaysCard: {type: String, default: 'plop1'},\n            cardPlayDuring: {type: String, default: 'boomerang'},\n            roundEndAnimation: {type: String, default: 'none'},\n            roundWon: {type: String, default: 'laugh1'},\n            dealSummaryWon: {type: String, default: 'none'},\n            dealSummaryLost: {type: String, default: 'none'},\n            gameSummaryWon: {type: String, default: 'none'},\n            gameSummaryLost: {type: String, default: 'none'},\n            // roundLost: {type: String, default: 'roundLost'},\n        },\n        cardSortPreference: {type: String, default: \"Descending\"},\n        suitSortPreference: {type: String, default: \"Descending\"},\n        trumpOnLeftHand: {type: Boolean, default: true},\n        trumpOnLeftExposedHand: {type: Boolean, default: true},\n        shouldAnimateThinkingForSelf: {type: Boolean, default: true},\n        shouldAnimateCardPlay: {type: Boolean, default: true},\n        shouldAnimateRoundEnd: {type: Boolean, default: true},\n        pointCountingConvention: {type: String, default: \"HCP\"},\n        cardBackPreference: {type: Number, default: 4},\n        colorTheme: {type: String, default: \"darkBlue\"},  //add new preferences to the users.js helper object\n        setHonorsAutomatically: {type: Boolean, default: false},\n    },\n    date: {type: Number, default: Date.now()},\n    emailValidated: {type: Boolean, default: false},\n    hasPaid: {type: Boolean, default: false},\n    resetPasswordToken: String,\n    resetPasswordExpires: Date,\n    stats: {\n        totalPoints: {\n            distribution: {type: Number, default: 0},\n            highCard: {type: Number, default: 0},\n        },\n        maximums: {\n            distribution: {type: Number, default: 0},\n            highCard: {type: Number, default: 0},\n            combined: {\n                highCard: {type: Number, default: 0},\n                distribution: {type: Number, default: 0},\n            }\n        },\n        gamesPlayed: {type: Number, default: 0},\n        gamesWon: {type: Number, default: 0},\n        dealsPlayed: {type: Number, default: 0},\n        dealsPlayedAsDeclarer: {type: Number, default: 0},\n        dealsPlayedAsDefense: {type: Number, default: 0},\n        dealsWon: {type: Number, default: 0},\n        dealsWonAsDeclarer: {type: Number, default: 0},\n        dealsWonAsDefense: {type: Number, default: 0},\n        dealsDoubled: {type: Number, default: 0},\n        dealsWonDoubled: {type: Number, default: 0},\n        ties: {type: Number, default: 0},\n    },\n});\n\n// Telling TS that Models are inheriting from mongoose's Document Interface\nexport interface UserModel extends mongoose.Document, User {}\nexport interface GameModel extends mongoose.Document, Game {}\nexport interface DealModel extends mongoose.Document, Deal {}","import { GameDetailSizes, SortOptions } from '@nx-bridge/interfaces-and-types';\n\nexport const rootRoute = 'replays';\nexport const GET_DEALS_CONTROLLER_STRING = 'getDeals';\nexport const GET_GAMES_CONTROLLER_STRING = 'getGames';\nexport const GET_GAME_COUNT_CONTROLLER_STRING = 'getGameCount';\nexport const GET_USER_CONTROLLER_STRING = 'getUser';\nexport const GET_USERS_CONTROLLER_STRING = 'getUsers';\n\nexport const USER_ID_STRING = 'userId';\nexport const GET_GAMES_LAST_STRING = 'last';\nexport const DEALS_STRING = 'deals';\nexport const USERNAME_STRING = 'username';\nexport const EMAIL_STRING = 'email';\nexport const USERS_STRING = 'users';\nexport const DEAL_PASSED_OUT_MESSAGE ='Deal passed out';\n\nexport const GET_DEALS_URL = `/api/${GET_DEALS_CONTROLLER_STRING}`;\nexport const GET_GAMES_URL = `/api/${GET_GAMES_CONTROLLER_STRING}`;\nexport const GET_GAME_COUNT_URL = `/api/${GET_GAME_COUNT_CONTROLLER_STRING}`;\nexport const GET_USER_URL = `/api/${GET_USER_CONTROLLER_STRING}`;\nexport const GET_USERS_URL = `/api/${GET_USERS_CONTROLLER_STRING}`;\n\nexport const OVERFLOW_Y_SCROLL_CLASSNAME = 'overflow-y-auto';\nexport const HEIGHT_AUTO_CLASSNAME = 'h-auto';\nexport const HIDDEN_CLASSNAME = 'hidden';\nexport const VISIBLE_CLASSNAME = 'visible';\nexport const DISPLAY_NONE_CLASSNAME = 'd-none';\nexport const MATCHED_DEAL_CLASSNAME = 'matched-deal';\nexport const LOGIN_CARD_CLASSNAME = 'login-card';\nexport const DEALS_LIST_CLASSNAME = 'deals-list';\nexport const DEAL_DETAIL_CLASSNAME = 'deal-detail';\nexport const GAME_DETAIL_CLASSNAME = 'game-detail';\nexport const GAMES_VIEW_CLASSNAME = 'games-view';\nexport const DEAL_PLAYER_CLASSNAME = 'deal-player';\nexport const FILTER_MANAGER_CLASSNAME = 'filter-manager';\nexport const FULL_SIZE_CLASSNAME = 'full-size';\nexport const COLOR_RED_CLASSNAME = 'color-red';\nexport const COLOR_BLACK_CLASSNAME = 'color-black';\nexport const HEADER_CLASSNAME = 'navbar';\nexport const GAME_DETAIL_BORDER_BOTTOM_CLASSNAME = 'game-detail-border-bottom';\nexport const DEAL_DETAIL_BUTTON_BORDER_BOTTOM_CLASSNAME =\n  'deal-detail-button-border-bottom';\n\nexport const dealsListDealsButtonChoices: [string, string] = [\n  'Open',\n  '&#10006;',\n];\nexport const dealsListDetailsButtonChoices: [string, string] = [\n  'Show All',\n  'Hide All',\n];\nexport const dealDetailButtonChoices: [string, string] = ['Show', 'Hide'];\n\nexport const MOBILE_START_WIDTH = 561;\nexport const ANIMATION_DURATION = 500;\n\nexport const gameDetailHeightAboveBreakpointCssPropName =\n  '--game-detail-height-above-breakpoint';\nexport const gameDetailHeightBelowBreakpointCssPropName =\n  '--game-detail-height-below-breakpoint';\nexport const gameDetailSummaryHeightPercentageCssPropName =\n  '--game-detail-summary-height-percentage';\nexport const playerLabelsDisplayTypeCssPropName =\n  '--player-labels-display-type';\nexport const playerNamesDisplayTypeCssPropName = '--player-names-display-type';\nexport const dealsListButtonFontSizeCssPropName =\n  '--deals-list-button-font-size';\nexport const gameDetailBorderCssPropName = '--game-detail-border';\n\nexport const colorBlackCssPropName = '--color-black-rgb';\nexport const colorPrimary1CssPropName = '--color-primary-1-rgb';\nexport const colorPrimary4CssPropName = '--color-primary-4-rgb';\n\nexport const gameDetailBorderOpen = `1px solid rgba(var(${colorBlackCssPropName}), 1)`;\nexport const gameDetailBorderClosed = `2px solid rgba(var(${colorPrimary4CssPropName}), .25)`;\nexport const dealDetailButtonBorder = `1px solid rgba(var(${colorPrimary1CssPropName}), 0.5) !important;`;\n\nexport const SIZE_OPTIONS = {\n  [GameDetailSizes.small]: GameDetailSizes.small,\n  [GameDetailSizes.medium]: GameDetailSizes.medium,\n  [GameDetailSizes.large]: GameDetailSizes.large,\n};\nexport const SORT_OPTIONS = {\n  [SortOptions.ascending]: SortOptions.ascending,\n  [SortOptions.descending]: SortOptions.descending,\n};\nexport const RESULTS_PER_PAGE_OPTIONS = [1, 2, 5, 10, 25, 50, 100];\nexport const NOT_AVAILABLE_STRING = 'N/A';\n\nexport const filterManagerContracts = ['Pick a Contract'];\nexport const filterManagerBids = ['Pick a Bid'];\nexport const filterManagerCardsAsNumbers = ['Pick a Card', ...Array(52).keys()];\nexport const filterManagerPlayerNames = ['Pick a Username'];\nexport const filterManagerGameNames = ['Pick a Game Name'];\nexport const filterManagerDoubleOptions = ['Pick a Multiplier', 'Once', 'Twice'];\nexport const COMPARER_HTML_ENTITIES = {\n  lessThanEqualTo: \"&#8804;\",\n  greaterThanEqualTo: \"&#8805;\",\n}","import { reducerDefaultValue } from '@nx-bridge/store';\nimport {\n  CardinalDirection,\n  CardValuesAsString,\n  DateObj,\n  DealRelevant,\n  GameRelevant,\n  ReducerNames,\n  Seating,\n  SortOptions,\n} from '@nx-bridge/interfaces-and-types';\nimport * as mongoose from 'mongoose';\nimport {\n  getCharacterFromCardAsNumber,\n  getCharValueFromCardValueString,\n  getDirectionFromSeating,\n  getHtmlEntityFromSuitOrCardAsNumber,\n  getHtmlEntitySpan,\n  getIsBidPlayable,\n  getPartnerFromDirection,\n} from './playing/functions';\nimport { MATCHED_DEAL_CLASSNAME } from '@nx-bridge/constants';\nimport { NOT_AVAILABLE_STRING } from './constants';\nimport {\n  suitsAsCapitalizedStrings,\n  suitsHtmlEntities,\n  tricksInABook,\n} from './playing/constants';\n\nexport function capitalize(str: string) {\n  return str\n    .split(' ')\n    .map((word: string) => word[0].toUpperCase() + word.slice(1))\n    .join(' ');\n}\n\nexport function getMongooseObjsFromRequestedDeals(requestedDeals: string[]) {\n  const mongooseObjs = [];\n\n  for (let i = 0; i < requestedDeals.length; i++) {\n    const deal = requestedDeals[i];\n    mongooseObjs.push(mongoose.Types.ObjectId(deal));\n  }\n\n  return mongooseObjs;\n}\n\nexport function getValueFromLocalStorage(value: string) {\n  return JSON.parse(localStorage.getItem(value) as string);\n}\n\nexport function setValueInLocalStorage(value: string, valueToSet: any) {\n  return localStorage.setItem(value, JSON.stringify(valueToSet));\n}\n\nexport function toggleClassOnList(\n  items: HTMLElement[],\n  classListToToggle: string\n) {\n  let result = null;\n  for (let i = 0; i < items.length; i++) {\n    const item = items[i];\n    result = item?.classList?.toggle(classListToToggle);\n  }\n  return result;\n}\n\nexport function toggleInnerHTML(\n  element: HTMLElement,\n  choices: [string, string]\n) {\n  if (!element || !choices) return;\n  if (element.innerHTML.match(choices[0])) element.innerHTML = choices[1];\n  else element.innerHTML = choices[0];\n}\n\nexport function getDeclarerFromDeal(deal: DealRelevant) {\n  if (!deal.declarer) return NOT_AVAILABLE_STRING;\n  for (let i = deal?.bids.length - 1; i >= 0; i--) {\n    const bid = deal?.bids[i][1];\n    if (getIsBidPlayable(bid)) {\n      return deal?.bids[i][0];\n    }\n  }\n  return 'Error in getDeclarerFromDeal()';\n}\n\nexport function getLinearPercentOfMaxMatchWithinRange(\n  currentTrackedValue: number,\n  minTrackedValue: number,\n  maxTrackedValue: number,\n  startOutputValue: number,\n  endOutputValue: number\n) {\n  //returns a value between a given input range that correlates to the value of variable as it changes within a different range.  If the tracked variable goes about the maxCutoff then it assumes the max value possible.  If it goes anywhere below the min value.  Any where inbetween is linearly correlated to the trackedValue.\n\n  if (currentTrackedValue >= maxTrackedValue) return endOutputValue;\n  if (currentTrackedValue <= minTrackedValue) return startOutputValue;\n\n  var trackedValueRange = Math.abs(maxTrackedValue - minTrackedValue);\n  var outputValueRange = Math.abs(endOutputValue - startOutputValue);\n  var amountAboveMin = currentTrackedValue - minTrackedValue;\n  var percentOfRange = amountAboveMin / trackedValueRange;\n\n  if (startOutputValue <= endOutputValue)\n    return startOutputValue + percentOfRange * outputValueRange;\n  else {\n    return startOutputValue - percentOfRange * outputValueRange;\n  }\n}\n\nexport const scrollToSection = (\n  sectionToScrollTo: HTMLElement,\n  headerHeight: number,\n  isScrollableContainer = false\n) => {\n  const topScrollAmount =\n    window.scrollY +\n    sectionToScrollTo.getBoundingClientRect().top -\n    headerHeight;\n\n  if (isScrollableContainer) return topScrollAmount;\n\n  return window.scroll({\n    top: topScrollAmount,\n    left: 0,\n    behavior: 'smooth',\n  });\n};\n\nexport function sortDescending(games: GameRelevant[]) {\n  //todo: look up which sorting algorithm to use\n  games.reverse();\n}\n\nexport function sortAscending(games: GameRelevant[]) {\n  //todo: look up which sorting algorithm to use\n  // games.reverse();\n}\n\nexport function paginateGames(\n  games: GameRelevant[],\n  sortPreference: string,\n  batchNumber: number,\n  numberPerBatch: number\n) {\n  //note: batchNumber starts at 0\n  if (!games || games.length <= 0) return [];\n  const batchStart = numberPerBatch * batchNumber;\n  const batchEnd = batchStart + numberPerBatch;\n  let toReturnGames: GameRelevant[] = [];\n  if (sortPreference === SortOptions.descending)\n    toReturnGames = games.slice(batchStart, batchEnd);\n  else {\n    for (let i = 0; i < games.length; i++) {\n      const game = games[games.length - 1 - i];\n      if (i >= batchStart && i < batchEnd) toReturnGames.push(game);\n    }\n  }\n  return toReturnGames;\n}\n\nexport function getNewTotalNumberOfPages(\n  resultsPerPage: number,\n  totalGames: number\n) {\n  return Math.ceil(totalGames / resultsPerPage);\n}\n\nexport function getNewBatchNumber(\n  currentBatchNumber: number,\n  currentResultsPerPage: number,\n  newResultsPerPage: number,\n  totalGames: number\n) {\n  const maxNumberOfIterations = Math.ceil(totalGames / newResultsPerPage);\n  const currentMinResult = currentBatchNumber * currentResultsPerPage;\n  const currentMaxResult = currentMinResult + (currentResultsPerPage - 1);\n\n  if (newResultsPerPage === currentResultsPerPage) return currentBatchNumber;\n  // if (newResultsPerPage > currentResultsPerPage) {\n  //when going up in resultsPerPage\n  for (let i = 0; i < maxNumberOfIterations; i++) {\n    const newMinResult = i * newResultsPerPage;\n    const newMaxResult = newMinResult + (newResultsPerPage - 1);\n\n    if (currentMinResult >= newMinResult && currentMinResult <= newMaxResult) {\n      return i;\n    }\n  }\n\n  return 0;\n  // } else if (newResultsPerPage < currentResultsPerPage) {\n  //when going down in resultsPerPage\n\n  // }\n}\n\nexport function getDateAndTimeString(filterName: DateObj, filterMsg: string) {\n  if (!filterName?.date) return NOT_AVAILABLE_STRING;\n  const date = filterName.date.toLocaleDateString();\n  const shortDate =\n    date.substr(0, date.length - 4) + date.substr(date.length - 2, date.length);\n  const time = filterName.date.toLocaleTimeString();\n  const shortTime = time.replace(/(:\\d{2}) .*$/i, '');\n  const amOrPm = time.substr(-2, 2);\n  return `${filterMsg}${shortTime}${amOrPm} on ${shortDate}`;\n}\n\nexport function resetMatchedDeals() {\n  const matched = document.querySelectorAll(`.${MATCHED_DEAL_CLASSNAME}`);\n  for (let i = 0; i < matched.length; i++) {\n    const match = matched[i];\n    match.classList.remove(MATCHED_DEAL_CLASSNAME);\n  }\n}\n\nexport function getHtmlEntityFromCard(card: number | string) {\n  const number = +card;\n  if (isNaN(number)) return `${card}`;\n  const htmlEntity = getHtmlEntityFromSuitOrCardAsNumber(number);\n  const char = getCharacterFromCardAsNumber(number, true);\n  return `${char}${htmlEntity}`;\n}\n\nexport function getHtmlEntityFromContract(contract: string) {\n  const clubString = suitsAsCapitalizedStrings[0].substr(\n    0,\n    suitsAsCapitalizedStrings[0].length - 1\n  );\n  const diamondString = suitsAsCapitalizedStrings[1].substr(\n    0,\n    suitsAsCapitalizedStrings[1].length - 1\n  );\n  const heartString = suitsAsCapitalizedStrings[2].substr(\n    0,\n    suitsAsCapitalizedStrings[2].length - 1\n  );\n  const spadeString = suitsAsCapitalizedStrings[3].substr(\n    0,\n    suitsAsCapitalizedStrings[3].length - 1\n  );\n\n  if (contract.match(new RegExp(clubString, 'i'))) return suitsHtmlEntities[0];\n\n  if (contract.match(new RegExp(diamondString, 'i')))\n    return suitsHtmlEntities[1];\n\n  if (contract.match(new RegExp(heartString, 'i'))) return suitsHtmlEntities[2];\n\n  if (contract.match(new RegExp(spadeString, 'i'))) return suitsHtmlEntities[3];\n  else return 'NT';\n}\n\nexport function getContractAsHtmlEntityString(contract: string) {\n  const split = contract.split(' ');\n  const number = +getCharValueFromCardValueString(\n    split[0] as CardValuesAsString\n  );\n  const htmlEntitySpan = getHtmlEntitySpan(split[1], true);\n  return `${number}${htmlEntitySpan}`;\n}\n\nexport function getPlayingPlayers(\n  seating: Seating,\n  declarer: string\n): [string, string] {\n  //return the declarer and the declarer's partner as an array of strings\n  if (!seating) throw new Error('Problem with seating in deal-detail');\n  try {\n    const declarersDirection = getDirectionFromSeating(seating, declarer);\n    const declarersPartner = getPartnerFromDirection(\n      seating,\n      declarersDirection as CardinalDirection\n    );\n    return [declarer, declarersPartner];\n  } catch (err) {\n    console.log('err =', err);\n    return ['', ''];\n  }\n}\n\nexport function getAmountMadeAndNeededFromDeal(\n  deal: DealRelevant,\n  contractPrefix: number,\n  seating: Seating,\n  declarer: string\n) {\n  const error = {\n    amountNeeded: NOT_AVAILABLE_STRING,\n    amountMade: reducerDefaultValue,\n  };\n\n  if (!deal.contract || !deal.declarer) return error;\n\n  const playingPlayers: [string, string] = getPlayingPlayers(\n    seating as Seating,\n    declarer\n  );\n  \n  if (!playingPlayers[0]) return error;\n\n  const amountNeeded = contractPrefix + tricksInABook;\n  const amountMade = deal?.roundWinners.reduce((count, roundWinner) => {\n    if (playingPlayers.includes(roundWinner[0])) return count + 1;\n    return count;\n  }, 0);\n\n  return { amountNeeded, amountMade };\n}\n\nexport function checkForParentOfType(\n\tclickedElement: HTMLElement,\n\tparentType: string,\n\tclassPresent = \"\",\n): boolean {\n\ttry {\n\t\tif (\n\t\t\tclickedElement &&\n\t\t\tclickedElement.parentNode &&\n\t\t\t(clickedElement.parentNode as HTMLElement).localName === parentType &&\n\t\t\t(clickedElement.parentNode as HTMLElement).className.search(\n\t\t\t\tclassPresent,\n\t\t\t) !== -1\n\t\t)\n\t\t\treturn true;\n\n\t\tif ((clickedElement.parentNode as HTMLElement).localName.search(/html/i) !== -1) return false;\n\n\t\tconst parent = clickedElement.parentNode as HTMLElement;\n\t\treturn checkForParentOfType(parent, parentType, classPresent);\n\t} catch (error) {\n\t\treturn false;\n\t}\n}","export * from './constants';\nexport * from './functions';\nexport * from './playing/constants';\nexport * from './playing/functions';\n","import { Team, TeamFull } from '@nx-bridge/interfaces-and-types';\n\nexport const cardsPerDeck = 52;\nexport const cardsPerSuit = 13;\nexport const cardsPerHand = 13;\nexport const minCardValue = 0;\nexport const maxCardValue = 51;\nexport const tricksInABook = 6;\nexport const cardinalDirections = ['north', 'east', 'south', 'west'];\nexport const locations = ['top', 'right', 'bottom', 'left'];\nexport const suits = {\n  clubs: 'clubs',\n  diamonds: 'diamonds',\n  hearts: 'hearts',\n  spades: 'spades',\n  noTrump: null,\n};\nexport const sortOrders = {\n  Ascending: 'Ascending',\n  Descending: 'Descending',\n  AscendingAlternatingColors: 'AscendingAlternatingColors',\n  DescendingAlternatingColors: 'DescendingAlternatingColors',\n};\n\nexport const suitsHtmlEntities = ['&clubs;', '&diams;', '&hearts;', '&spades;'];\nexport const suitsAsCapitalizedStrings = [\n  'Clubs',\n  'Diamonds',\n  'Hearts',\n  'Spades',\n];\nexport const cardValuesAsStrings = [\n  'Two',\n  'Three',\n  'Four',\n  'Five',\n  'Six',\n  'Seven',\n  'Eight',\n  'Nine',\n  'Ten',\n  'Jack',\n  'Queen',\n  'King',\n  'Ace',\n];\nexport const contracts = [\n  'One Club',\n  'One Diamond',\n  'One Heart',\n  'One Spade',\n  'One No Trump',\n  'Two Club',\n  'Two Diamond',\n  'Two Heart',\n  'Two Spade',\n  'Two No Trump',\n  'Three Club',\n  'Three Diamond',\n  'Three Heart',\n  'Three Spade',\n  'Three No Trump',\n  'Four Club',\n  'Four Diamond',\n  'Four Heart',\n  'Four Spade',\n  'Four No Trump',\n  'Five Club',\n  'Five Diamond',\n  'Five Heart',\n  'Five Spade',\n  'Five No Trump',\n  'Six Club',\n  'Six Diamond',\n  'Six Heart',\n  'Six Spade',\n  'Six No Trump',\n  'Seven Club',\n  'Seven Diamond',\n  'Seven Heart',\n  'Seven Spade',\n  'Seven No Trump',\n];\n\nexport const teams: [Team, Team] = ['NS', 'EW'];\nexport const teamsFull: [TeamFull, TeamFull] = ['northSouth', 'eastWest'];\n","import {\n  CardinalDirection,\n  CardValuesAsString,\n  Hand,\n  Hands,\n  Seating,\n  Suit,\n} from '@nx-bridge/interfaces-and-types';\nimport {\n  COLOR_RED_CLASSNAME,\n  cardinalDirections,\n  cardsPerSuit,\n  cardValuesAsStrings,\n  maxCardValue,\n  minCardValue,\n  suits,\n  suitsAsCapitalizedStrings,\n  suitsHtmlEntities,\n  getHtmlEntityFromCard,\n} from '@nx-bridge/constants';\nimport { getHtmlEntityFromContract } from '../functions';\nimport { NOT_AVAILABLE_STRING } from '../constants';\n\nexport function getCardStringFromNumber(cardAsNumber: number) {\n  if (cardAsNumber === undefined || cardAsNumber === null) return '';\n  if (cardAsNumber < minCardValue || cardAsNumber > maxCardValue)\n    throw new Error(`Error converting ${cardAsNumber} to card string`);\n\n  const cardValue = cardValuesAsStrings[cardAsNumber % cardsPerSuit];\n  const index = Math.floor(cardAsNumber / cardsPerSuit);\n  const suit = suitsAsCapitalizedStrings[index];\n  return cardValue + ' of ' + suit;\n}\n\nexport function getSuitFromNumber(cardAsNumber: number) {\n  if (cardAsNumber === null || cardAsNumber === undefined)\n    throw new Error(`Error getting suit for cardAsNumber: ${cardAsNumber}.`);\n\n  const index = Math.floor(cardAsNumber / 13);\n  if (index === -1) return '';\n  return suitsAsCapitalizedStrings[index]?.toLowerCase();\n}\n\nexport function getCharacterFromCardAsNumber(\n  cardAsNumber: number,\n  getLetterForTen = false\n) {\n  switch (cardAsNumber % 13) {\n    case 0:\n      return '2';\n    case 1:\n      return '3';\n    case 2:\n      return '4';\n    case 3:\n      return '5';\n    case 4:\n      return '6';\n    case 5:\n      return '7';\n    case 6:\n      return '8';\n    case 7:\n      return '9';\n    case 8:\n      if (getLetterForTen) return 'T';\n      return '10';\n    case 9:\n      return 'J';\n    case 10:\n      return 'Q';\n    case 11:\n      return 'K';\n    case 12:\n      return 'A';\n    default:\n      return '';\n  }\n}\n\nexport function getCharValueFromCardValueString(\n  str: CardValuesAsString | 'One',\n  getLetterForTen = false\n) {\n  switch (str) {\n    case 'Ace':\n      return 'A';\n    case 'King':\n      return 'K';\n    case 'Queen':\n      return 'Q';\n    case 'Jack':\n      return 'J';\n    case 'Ten':\n      if (getLetterForTen) return 'T';\n      return '10';\n    case 'Nine':\n      return '9';\n    case 'Eight':\n      return '8';\n    case 'Seven':\n      return '7';\n    case 'Six':\n      return '6';\n    case 'Five':\n      return '5';\n    case 'Four':\n      return '4';\n    case 'Three':\n      return '3';\n    case 'Two':\n      return '2';\n    case 'One':\n      return '1';\n    default:\n      return '';\n  }\n}\n\nexport function getHtmlEntityFromSuitOrCardAsNumber(\n  value: Suit | number\n): string {\n  if (typeof value === 'number') {\n    const suitAsString = getSuitFromNumber(value);\n    if (!suitAsString) return '';\n\n    const htmlEntityToUse =\n      suitsHtmlEntities[\n        suitsAsCapitalizedStrings.findIndex(\n          (str) => str.toLowerCase() === suitAsString.toLowerCase()\n        )\n      ];\n\n    return htmlEntityToUse ? htmlEntityToUse : '';\n  }\n\n  const index = suitsAsCapitalizedStrings.findIndex((s) => {\n    return s.slice(0, s.length - 1).toLowerCase() === value.toLowerCase();\n  });\n  return index !== -1 ? suitsHtmlEntities[index] : 'NT';\n}\n\nexport function getHtmlEntitySpan(numberOrContract: number | string, isContract = false) {\n  let colorToUse = 'color-white';\n  let htmlEntity = '';\n  \n  if (isContract) htmlEntity = getHtmlEntityFromContract(numberOrContract as string);\n  else htmlEntity = getHtmlEntityFromCard(numberOrContract);\n\n  if (htmlEntity.match(/diam|heart/i))\n    colorToUse = `${COLOR_RED_CLASSNAME}-light`;\n  \n  return `<span class=\"${colorToUse}\">${htmlEntity}</span>`;\n}\n\nexport function getIsBidPlayable(bid: string) {\n  if (!bid.match(/double/i) && !bid.match(/pass/i)) return true;\n  return false;\n}\n\nexport function getDirectionFromSeating(seating: Seating, username: string) {\n  if (username === NOT_AVAILABLE_STRING) return NOT_AVAILABLE_STRING;\n  for (const direction in seating) {\n    if (Object.prototype.hasOwnProperty.call(seating, direction)) {\n      const usernameInSeating = seating[direction];\n      if (username === usernameInSeating) return direction;\n    }\n  }\n  throw new Error('Invalid username or seating in getDirectionFromSeating()');\n}\n\nexport function getPartnerFromDirection(\n  seating: Seating,\n  direction: CardinalDirection\n) {\n  if (direction === NOT_AVAILABLE_STRING) return NOT_AVAILABLE_STRING;\n\n  if (direction.toLowerCase() === cardinalDirections[0].toLowerCase())\n    return seating.south;\n  else if (direction.toLowerCase() === cardinalDirections[1].toLowerCase())\n    return seating.west;\n  else if (direction.toLowerCase() === cardinalDirections[2].toLowerCase())\n    return seating.north;\n  else if (direction.toLowerCase() === cardinalDirections[3].toLowerCase())\n    return seating.east;\n  throw new Error('Invalid direction or seating in getPartnerFromDirection()');\n}\n\nexport function getSuitAsStringFromArray(suit: number[]): string | null {\n  if (suit && suit.length > 0) {\n    const cardsAsChar = [];\n\n    for (let i = 0; i < suit.length; i++) {\n      const cardAsNumber = suit[i];\n      cardsAsChar.push(\n        getCharacterFromCardAsNumber(cardAsNumber % cardsPerSuit, true)\n      );\n    }\n\n    return cardsAsChar.join(',');\n  }\n  return null;\n}\n\nexport function sortHand(hand: Hand) {\n  //Sorts the hand clubs, diams, hearts, then spades (for displaying in replays)\n  let clubs: number[] = [],\n    diamonds: number[] = [],\n    hearts: number[] = [],\n    spades: number[] = [];\n  for (let i = 0; i < hand.length; i++) {\n    const suit = hand[i];\n    const suitAsString = getSuitFromNumber(\n      suit && suit.length > 0 ? suit[0] : -1\n    );\n\n    if (suitAsString === suits.clubs) clubs = suit;\n    else if (suitAsString === suits.diamonds) diamonds = suit;\n    else if (suitAsString === suits.hearts) hearts = suit;\n    else if (suitAsString === suits.spades) spades = suit;\n  }\n\n  return [clubs, diamonds, hearts, spades];\n}\n\nexport function flatten(array: any, depth = 1) {\n  return depth > 0\n    ? array.reduce(\n        (acc: [], val: any) =>\n          acc.concat(Array.isArray(val) ? flatten(val, depth - 1) : val),\n        []\n      )\n    : array.slice();\n}\n\nexport function getUserWhoPlayedCard(hands: Hands, card: number) {\n  for (const username in hands) {\n    if (Object.prototype.hasOwnProperty.call(hands, username)) {\n      const hand = hands[username];\n      const flatHand = flatten(hand);\n      if (flatHand?.includes(card)) {\n        return username;\n      }\n    }\n  }\n  return '';\n}\n\nexport function createHandArrayFromFlatArray(flatArray: number[]) {\n  const spades = [],\n    hearts = [],\n    diamonds = [],\n    clubs = [];\n  for (let i = 0; i < flatArray.length; i++) {\n    const cardAsNumber = flatArray[i];\n    if (cardAsNumber >= 0 && cardAsNumber <= 12) clubs.push(cardAsNumber);\n    else if (cardAsNumber >= 13 && cardAsNumber <= 25)\n      diamonds.push(cardAsNumber);\n    else if (cardAsNumber >= 26 && cardAsNumber <= 38)\n      hearts.push(cardAsNumber);\n    else if (cardAsNumber >= 39 && cardAsNumber <= 51)\n      spades.push(cardAsNumber);\n  }\n  return [spades, hearts, clubs, diamonds];\n}\n","export * from './lib/frontend-types';\nexport * from './lib/controller-types';\nexport * from './lib/both-types';\n\n","import { Seating, Game, DealCore } from './frontend-types';\n\n\nexport interface DealRelevant extends DealCore{\n  _id: string,\n}\nexport interface DealRequest {\n  //dealId as key and true/false represents whether to return scoring\n  [key: string]: boolean,\n};\n\nexport interface GameRelevant {\n  deals: string[];\n  players: string[];\n  completionDate: number;\n  room: RoomRelevant,\n  _id: string,\n}\n\nexport interface GetUserResponse {\n  username: string,\n  id: string,\n}\n\n\nexport interface LocalStorageUserCore {\n  [key: string]: string | number | GameRelevant[] | string[];\n  lastSearchDate: number;\n  username: string;\n  lastGameCount: number;\n  email: string;\n}\n\nexport interface LocalStorageUser extends LocalStorageUserCore {\n  gameIds: string[];\n}\n\nexport interface LocalStorageUserWithGames extends LocalStorageUserCore {\n  games: GameRelevant[];\n}\n\nexport interface LocalStorageUsers {\n  [key: string]: LocalStorageUser;\n}\n\nexport interface LocalStorageGames {\n  [key: string]: GameRelevant[];\n}\nexport interface RoomRelevant {\n  name: string,\n  seating: Seating,\n}\n\nexport type EmptyLocalStorageDealsReturn = null;\nexport type EmptyLocalStorageUsersReturn = null;\nexport type EmptyLocalStorageGamesReturn = {[key:string]: Game[]};","import { DealRelevant } from './both-types';\n\nexport interface CanSkipFilters {\n  all: boolean;\n  afterDate: boolean;\n  beforeDate: boolean;\n  contract: boolean;\n  dealResult: boolean;\n  declarer: boolean;\n  double: boolean;\n  gameName: boolean;\n  openingBid: boolean;\n  playerHasCard: boolean;\n  playerInGame: boolean;\n  wonBy: boolean;\n}\n//#region Interfaces\nexport interface DateObj {\n  date: Date | null;\n}\nexport interface Deal extends DealCore {\n  [key: string]: any;\n  players: ObjectId[];\n  redealCount: number;\n  dealSummary: DealSummary;\n}\nexport interface DealCore {\n  cardPlayOrder: number[];\n  hands: Hands;\n  roundWinners: string[][];\n  declarer: ObjectId;\n  dealer: ObjectId;\n  bids: Bid[];\n  contract: string;\n  doubleValue: number;\n  northSouth?: DealScoring;\n  eastWest?: DealScoring;\n}\nexport interface DealGameIncomplete extends DealCore {\n  agreeWithClaim: AgreeWithClaim;\n  acceptedClaims: AcceptedClaim[];\n}\nexport interface DealResult {\n  type: DealResultType;\n  amount: number;\n}\nexport interface ErrorMessage {\n  message: string;\n  status: number;\n}\nexport interface FetchedDeals {\n  [key: string]: DealRelevant;\n}\nexport interface Filters {\n  [key: string]: any;\n}\nexport interface FilterItem {\n  message: string;\n  error: string;\n  elementsToReset: any[];\n  date?: Date;\n  isDateInvalid?: boolean;\n  username?: string;\n  card?: number;\n}\nexport interface FilterItemDeletion {\n  key: string;\n  resetAction: any;\n  username?: string;\n  card?: number;\n}\nexport interface FilterItems {\n  [key: string]: FilterItem;\n}\nexport interface Game {\n  deals: ObjectId[];\n  room: Room;\n  gameRoundEndingScores: GameRoundEndingScores;\n  startDate: number;\n  completionDate: number;\n  players: ObjectId[];\n  points: Points;\n}\nexport interface GameIncomplete {\n  gameRoundEndingScores: GameRoundEndingScores;\n  hasMadeBid: { northSouth: boolean; eastWest: boolean };\n  hasSentIsAllowedToPlay: boolean;\n  isGameOver: boolean;\n  userObjs: UserObj[];\n  deals: DealGameIncomplete[];\n  name: string;\n  startDate: number;\n  usernames: string[];\n  pencilInStart: null | number;\n  originalSocketIds: { [key: string]: string };\n  seating: Seating;\n  gameState: string;\n  room: Room;\n  undoRequest: UndoRequest;\n  roundWinSounds: { [key: string]: string };\n  points: Points;\n  users: { [key: string]: string };\n  usersReadyToContinue: { [key: string]: boolean };\n}\nexport interface GameRoundEndingScores {\n  northSouth: number[];\n  eastWest: number[];\n}\nexport interface Room {\n  name: string;\n  password: string;\n  users: string[];\n  usersWhoMadeSeatingChoice: string[];\n  usersReady: string[];\n  seating: Seating;\n  biddingTimerDurationValue: number | 'none';\n  cardPlayTimerDurationValue: number | 'none';\n  roundEndAnimationCompletion: { [key: string]: number };\n  cardPlayAnimationCompletion: { [key: string]: number };\n  turnStartTime: number | null;\n  usernameOfCurrentPlayer: string | null;\n  usernameOfCurrentBidder: string | null;\n  shouldCountHonors: boolean;\n  northSouthAbove: number;\n  northSouthBelow: number;\n  northSouthVulnerable: boolean;\n  eastWestAbove: number;\n  eastWestBelow: number;\n  eastWestVulnerable: boolean;\n  dealer: string | null;\n  continueFromIncomplete: boolean;\n  timesUpComplete: boolean;\n}\nexport interface PlayerHasCard {\n  [key: string]: number[];\n}\nexport interface Preferences {\n  sound: {\n    isEnabled: boolean;\n    defaultVolume: number;\n    shotgunLoad: string;\n    isYourTurnHand: string;\n    isYourTurnExposed: string;\n    userPlaysCard: string;\n    cardPlayDuring: string;\n    roundEndAnimation: string;\n    roundWon: string;\n    dealSummaryWon: string;\n    dealSummaryLost: string;\n    gameSummaryWon: string;\n    gameSummaryLost: string;\n  };\n  cardSortPreference: string;\n  suitSortPreference: string;\n  trumpOnLeftHand: boolean;\n  trumpOnLeftExposedHand: boolean;\n  shouldAnimateThinkingForSelf: boolean;\n  shouldAnimateCardPlay: boolean;\n  shouldAnimateRoundEnd: boolean;\n  pointCountingConvention: string;\n  cardBackPreference: number;\n  colorTheme: string;\n  setHonorsAutomatically: boolean;\n}\nexport interface Stats {\n  totalPoints: {\n    distribution: number;\n    highCard: number;\n  };\n  maximums: {\n    distribution: number;\n    highCard: number;\n    combined: {\n      highCard: number;\n      distribution: number;\n    };\n  };\n  gamesPlayed: number;\n  gamesWon: number;\n  dealsPlayed: number;\n  dealsPlayedAsDeclarer: number;\n  dealsPlayedAsDefense: number;\n  dealsWon: number;\n  dealsWonAsDeclarer: number;\n  dealsWonAsDefense: number;\n  dealsDoubled: number;\n  dealsWonDoubled: number;\n  ties: number;\n}\nexport interface TeamScoring {\n  northSouth: number;\n  eastWest: number;\n}\nexport interface User {\n  // _id: any;\n  username: string;\n  password: string;\n  email: string | null;\n  preferences: Preferences;\n  date: Date;\n  emailValidated: boolean;\n  hasPaid: boolean;\n  resetPasswordToken: string | null;\n  resetPasswordExpires: Date | null;\n  stats: Stats;\n  zipCode?: number;\n  hash: string | null;\n  salt: string | null;\n}\nexport interface UserIds {\n  [key: string]: string;\n}\nexport interface WonBy {\n  type: WonByType;\n  amount: number;\n}\n//#endregion\n\n//#region Types\nexport type AcceptedClaim = {\n  claimAmount: number;\n  cardsClaimed: number[];\n};\nexport type AgreeWithClaim = {\n  claimAmount: number | null;\n  isClaimingAll: boolean;\n  socketIds: { [key: string]: string };\n  claimingCards: number[];\n  otherHandCards: number[];\n  throwInCards: { [key: string]: number[] };\n  claimSomeCardPlayOrder: number[];\n  endInHand: null | boolean;\n};\nexport type Bid = [string, string];\nexport type CardinalDirection =\n  | 'North'\n  | 'South'\n  | 'East'\n  | 'West'\n  | 'north'\n  | 'south'\n  | 'east'\n  | 'west'\n  | 'N/A';\nexport type CardValuesAsString =\n  | 'Ace'\n  | 'King'\n  | 'Queen'\n  | 'Jack'\n  | 'Ten'\n  | 'Nine'\n  | 'Eight'\n  | 'Seven'\n  | 'Six'\n  | 'Five'\n  | 'Four'\n  | 'Three'\n  | 'Two';\nexport type Contract = {\n  prefix: string;\n  htmlEntity: string;\n  doubleMultiplier: number;\n};\nexport type DealResultType = WonByType | 'equal';\nexport type DealScoring = {\n  [key: string]: any;\n  aboveTheLine: number;\n  belowTheLine: number;\n  totalBelowTheLineScore: number;\n  isVulnerable: boolean;\n  vulnerableTransitionIndex: number;\n};\nexport type DealSummary = {\n  contractPoints: number;\n  overTrickPoints: number;\n  underTrickPoints: number;\n  rubberBonus: number;\n  honorPoints: number;\n};\nexport type Hand = [number[], number[], number[], number[]];\nexport type Hands = { [key: string]: Hand };\nexport type HandsForConsumption = [string, Hand][] | null | undefined;\nexport type GameDetailDisplayPreferences = {\n  sort: string;\n  size: string;\n  resultsPerPage: string;\n};\nexport type ObjectId = string;\nexport type PlayerInGame = string[];\nexport type Points = { [key: string]: Point };\nexport type Point = {\n  distributionPoints: number[];\n  highCardPoints: number[];\n};\nexport type Seating = {\n  [key: string]: string;\n  north: string;\n  south: string;\n  east: string;\n  west: string;\n};\nexport type Suit = 'Club' | 'Diamond' | 'Heart' | 'Spade' | 'No Trump';\nexport type Team = 'EW' | 'NS' | '';\nexport type TeamFull = 'eastWest' | 'northSouth';\nexport type UndoRequest = {\n  active: boolean;\n  responses: { [key: string]: boolean };\n  alreadyAsked: { [key: string]: 0 | 1 };\n  numberOfResponsesNeeded: number | null;\n};\nexport type UserObj = {\n  socketId: string;\n  username: string;\n  room: string;\n  status: string;\n  preferences: Preferences;\n};\nexport type WonByType = 'less' | 'more' | '-1';\n//#endregion\n\n//#region Enums\nexport enum DateType {\n  before,\n  after,\n}\nexport enum GameDetailSizes {\n  small = 'small',\n  medium = 'medium',\n  large = 'large',\n}\nexport enum ReducerNames {\n  deals = 'deals',\n  games = 'games',\n  users = 'users',\n  filters = 'filters',\n  general = 'general',\n}\nexport enum SortOptions {\n  ascending = 'ascending',\n  descending = 'descending',\n}\nexport enum ToggleDealDetailButtonBehavior {\n  toggle,\n  open,\n  close,\n}\n//#endregion\n","export * from './lib/actions/deal.actions';\nexport * from './lib/actions/game.actions';\nexport * from './lib/actions/user.actions';\nexport * from './lib/actions/filter.actions';\nexport * from './lib/actions/general.actions';\n\nexport * from './lib/reducers/app.reducer';\nexport * from './lib/reducers/user.reducer';\nexport * from './lib/reducers/deal.reducer';\nexport * from './lib/reducers/game.reducer';\nexport * from './lib/reducers/filter.reducer';\nexport * from './lib/reducers/general.reducer';\n\n","import { Action as fromFilterActions } from '@ngrx/store';\nimport { Contract, DealRelevant, FetchedDeals } from '@nx-bridge/interfaces-and-types';\n\nexport const SET_DEALS_AS_STRING = '[Deals] SET_DEALS_AS_STRINGS';\nexport const SET_FETCHED_DEALS = '[Deals] SET_FETCHED_DEALS';\nexport const ADD_FETCHED_DEALS = '[Deals] ADD_FETCHED_DEALS';\nexport const SET_CURRENTLY_VIEWING_DEAL = '[Deals] SET_CURRENTLY_VIEWING_DEAL';\nexport const SET_CURRENTLY_VIEWING_DEAL_CONTRACT =\n  '[Deals] SET_CURRENTLY_VIEWING_DEAL_CONTRACT';\n\nexport interface CurrentlyViewingDeal extends DealRelevant {\n  dealNumber: number | string;\n  declarer: string;\n  biddingTable: string;\n  summaryPre: string;\n  summaryNumber: string;\n  summaryPost: string;\n}\n\nexport class SetDealsAsStrings implements fromFilterActions {\n  readonly type = SET_DEALS_AS_STRING;\n  constructor(public payload: string[]) {}\n}\n\nexport class SetFetchedDeals implements fromFilterActions {\n  readonly type = SET_FETCHED_DEALS;\n  constructor(public payload: FetchedDeals) {}\n}\n\nexport class AddFetchedDeals implements fromFilterActions {\n  readonly type = ADD_FETCHED_DEALS;\n  constructor(public payload: FetchedDeals) {}\n}\n\nexport class SetCurrentlyViewingDeal implements fromFilterActions {\n  readonly type = SET_CURRENTLY_VIEWING_DEAL;\n  constructor(public payload: CurrentlyViewingDeal) {}\n}\n\nexport class SetCurrentlyViewingDealContract implements fromFilterActions {\n  readonly type = SET_CURRENTLY_VIEWING_DEAL_CONTRACT;\n  constructor(public payload: Contract) {}\n}\n\nexport type DealActions =\n  | SetDealsAsStrings\n  | SetFetchedDeals\n  | SetCurrentlyViewingDeal\n  | SetCurrentlyViewingDealContract\n  | AddFetchedDeals;\n","import { Action } from '@ngrx/store';\nimport {\n  DealResult,\n  PlayerHasCard,\n  WonBy,\n} from '@nx-bridge/interfaces-and-types';\n\nexport const ADD_PLAYER_HAS_CARD = '[Filter] ADD_PLAYER_HAS_CARD';\nexport const ADD_PLAYER_IN_GAME_FILTER = '[Filter] ADD_PLAYER_IN_GAME_FILTER';\nexport const REMOVE_PLAYER_HAS_CARD = '[Filter] REMOVE_PLAYER_HAS_CARD';\nexport const REMOVE_PLAYER_IN_GAME_FILTER =\n  '[Filter] REMOVE_PLAYER_IN_GAME_FILTER';\nexport const SET_AFTER_DATE = '[Filter] SET_AFTER_DATE';\nexport const SET_BEFORE_DATE = '[Filter] SET_BEFORE_DATE';\nexport const SET_CONTRACT_FILTER = '[Filter] SET_CONTRACT_FILTER';\nexport const SET_DEAL_RESULT_FILTER = '[Filter] SET_DEAL_RESULT_FILTER';\nexport const SET_DEALS_THAT_MATCH_FILTERS =\n  '[Filter] SET_DEALS_THAT_MATCH_FILTERS';\nexport const SET_DECLARER_FILTER = '[Filter] SET_DECLARER_FILTER';\nexport const SET_DOUBLE_FILTER = '[Filter] SET_DOUBLE_FILTER';\nexport const SET_GAME_NAME_FILTER = '[Filter] SET_GAME_NAME_FILTER';\nexport const SET_IS_FILTER_SAME = '[Filter] SET_IS_FILTER_SAME';\nexport const SET_OPENING_BID_FILTER = '[Filter] SET_OPENING_BID_FILTER';\nexport const SET_PLAYER_IN_GAME_FILTER = '[Filter] SET_PLAYER_IN_GAME_FILTER';\nexport const SET_PLAYER_HAS_CARD = '[Filter] SET_PLAYER_HAS_CARD';\nexport const SET_WON_BY_FILTER = '[Filter] SET_WON_BY_FILTER';\n\nexport class AddPlayerHasCard implements Action {\n  readonly type = ADD_PLAYER_HAS_CARD;\n  constructor(public payload: PlayerHasCard) {}\n}\n\nexport class AddPlayerInGameFilter implements Action {\n  readonly type = ADD_PLAYER_IN_GAME_FILTER;\n  constructor(public payload: string) {}\n}\n\nexport class RemovePlayerHasCard implements Action {\n  readonly type = REMOVE_PLAYER_HAS_CARD;\n  constructor(public payload: { username: string; card: number }) {}\n}\n\nexport class RemovePlayerInGameFilter implements Action {\n  readonly type = REMOVE_PLAYER_IN_GAME_FILTER;\n  constructor(public payload: string) {}\n}\n\nexport class SetAfterDate implements Action {\n  readonly type = SET_AFTER_DATE;\n  constructor(public payload: number) {}\n}\n\nexport class SetBeforeDate implements Action {\n  readonly type = SET_BEFORE_DATE;\n  constructor(public payload: number) {}\n}\n\nexport class SetContractFilter implements Action {\n  readonly type = SET_CONTRACT_FILTER;\n  constructor(public payload: string) {}\n}\n\nexport class SetDealResultFilter implements Action {\n  readonly type = SET_DEAL_RESULT_FILTER;\n  constructor(public payload: DealResult) {}\n}\n\nexport class SetDealsThatMatchFilters implements Action {\n  readonly type = SET_DEALS_THAT_MATCH_FILTERS;\n  constructor(public payload: string[]) {}\n}\n\nexport class SetDeclarerFilter implements Action {\n  readonly type = SET_DECLARER_FILTER;\n  constructor(public payload: string) {}\n}\n\nexport class SetDoubleFilter implements Action {\n  readonly type = SET_DOUBLE_FILTER;\n  constructor(public payload: number) {}\n}\n\nexport class SetGameNameFilter implements Action {\n  readonly type = SET_GAME_NAME_FILTER;\n  constructor(public payload: string) {}\n}\n\nexport class SetIsFilterSame implements Action {\n  readonly type = SET_IS_FILTER_SAME;\n  constructor(public payload: boolean) {}\n}\n\nexport class SetOpeningBidFilter implements Action {\n  readonly type = SET_OPENING_BID_FILTER;\n  constructor(public payload: string) {}\n}\n\nexport class SetPlayerHasCard implements Action {\n  readonly type = SET_PLAYER_HAS_CARD;\n  constructor(public payload: PlayerHasCard) {}\n}\n\nexport class SetPlayerInGameFilter implements Action {\n  readonly type = SET_PLAYER_IN_GAME_FILTER;\n  constructor(public payload: string[]) {}\n}\n\nexport class SetWonByFilter implements Action {\n  readonly type = SET_WON_BY_FILTER;\n  constructor(public payload: WonBy) {}\n}\n\nexport type FilterActions =\n  | AddPlayerHasCard\n  | AddPlayerInGameFilter\n  | RemovePlayerHasCard\n  | RemovePlayerInGameFilter\n  | SetAfterDate\n  | SetBeforeDate\n  | SetContractFilter\n  | SetDealResultFilter\n  | SetDealsThatMatchFilters\n  | SetDeclarerFilter\n  | SetDoubleFilter\n  | SetGameNameFilter\n  | SetIsFilterSame\n  | SetOpeningBidFilter\n  | SetPlayerHasCard\n  | SetPlayerInGameFilter\n  | SetWonByFilter;\n","import { Action as fromGeneralActions } from '@ngrx/store';\nimport { GameRelevant, Seating } from '@nx-bridge/interfaces-and-types';\n\nexport const SET_GAMES = '[Games] SET_GAMES';\nexport const SET_CURRENTLY_VIEWING_GAME = '[Games] SET_CURRENTLY_VIEWING_GAME';\nexport const SET_FILTERED_GAMES = '[Games] SET_FILTERED_GAMES';\nexport const SET_CURRENTLY_DISPLAYING_GAMES = '[Games] SET_CURRENTLY_DISPLAYING_GAMES';\nexport const SET_IS_VIEWING_GAME = '[Games] SET_IS_VIEWING_GAME';\nSET_FILTERED_GAMES;\nexport interface CurrentlyViewingGame {\n  seating: Seating;\n  date: string | number;\n  name: string;\n  deals: string[];\n}\n\nexport class SetCurrentlyViewingGame implements fromGeneralActions {\n  readonly type = SET_CURRENTLY_VIEWING_GAME;\n  constructor(public payload: CurrentlyViewingGame) {}\n}\nexport class SetGames implements fromGeneralActions {\n  readonly type = SET_GAMES;\n  constructor(public payload: GameRelevant[]) {}\n}\n\nexport class SetCurrentlyDisplayingGames implements fromGeneralActions {\n  readonly type = SET_CURRENTLY_DISPLAYING_GAMES;\n  constructor(public payload: GameRelevant[]) {}\n}\n\nexport class SetFilteredGames implements fromGeneralActions {\n  readonly type = SET_FILTERED_GAMES;\n  constructor(public payload: GameRelevant[]) {}\n}\n\nexport class SetIsViewingGame implements fromGeneralActions {\n  readonly type = SET_IS_VIEWING_GAME;\n  constructor(public payload: boolean) {}\n}\n\nexport type GameActions =\n  | SetGames\n  | SetCurrentlyViewingGame\n  | SetIsViewingGame\n  | SetCurrentlyDisplayingGames\n  | SetFilteredGames;\n","import { Action } from '@ngrx/store';\nexport const SET_BATCH_NUMBER = '[General] SET_BATCH_NUMBER';\nexport const SET_IS_LOADING = '[General] SET_IS_LOADING';\nexport const SET_LOADING_ERROR = '[General] SET_LOADING_ERROR';\nexport const SET_SORTING_PREFERENCE = '[General] SET_SORTING_PREFERENCE';\nexport const SET_RESULTS_PER_PAGE_PREFERENCE =\n  '[General] SET_RESULTS_PER_PAGE_PREFERENCE';\n\nexport class SetBatchNumber implements Action {\n  readonly type = SET_BATCH_NUMBER;\n  constructor(public payload: number) {}\n}\n\nexport class SetIsLoading implements Action {\n  readonly type = SET_IS_LOADING;\n  constructor(public payload: boolean) {}\n}\n\nexport class SetLoadingError implements Action {\n  readonly type = SET_LOADING_ERROR;\n  constructor(public payload: string) {}\n}\n\nexport class SetResultsPerPagePreference implements Action {\n  readonly type = SET_RESULTS_PER_PAGE_PREFERENCE;\n  constructor(public payload: string) {}\n}\n\nexport class SetSortingPreference implements Action {\n  readonly type = SET_SORTING_PREFERENCE;\n  constructor(public payload: string) {}\n}\n\nexport type GeneralActions =\n  | SetBatchNumber\n  | SetIsLoading\n  | SetLoadingError\n  | SetResultsPerPagePreference\n  | SetSortingPreference;\n","import { Action } from \"@ngrx/store\";\nimport { LocalStorageUserWithGames, UserIds } from \"@nx-bridge/interfaces-and-types\";\n\nexport const SET_USERS = '[Users] SET_USERS';\nexport const SET_CURRENTLY_VIEWING_USER = '[Users] SET_CURRENTLY_VIEWING_USER';\n\nexport class SetUserIds implements Action {\n  readonly type = SET_USERS;\n  constructor(public payload: UserIds){}\n}\n\nexport class SetCurrentlyViewingUser implements Action {\n  readonly type = SET_CURRENTLY_VIEWING_USER;\n  constructor(public payload: LocalStorageUserWithGames){}\n}\n\nexport type UserActions = SetUserIds | SetCurrentlyViewingUser;","import * as fromDeal from './deal.reducer';\nimport * as fromGame from './game.reducer';\nimport * as fromUser from './user.reducer';\nimport * as fromFilter from './filter.reducer';\nimport * as fromGeneral from './general.reducer';\nimport { ActionReducerMap } from \"@ngrx/store\";\nimport { ReducerNames } from '@nx-bridge/interfaces-and-types';\n\nexport interface AppState {\n  [ReducerNames.deals]: fromDeal.DealState,\n  [ReducerNames.games]: fromGame.GameState,\n  [ReducerNames.users]: fromUser.UserState,\n  [ReducerNames.filters]: fromFilter.FilterState,\n  [ReducerNames.general]: fromGeneral.GeneralState,\n}\n\nexport const appReducer: ActionReducerMap<AppState> = {\n  [ReducerNames.deals]: fromDeal.dealReducer as any,\n  [ReducerNames.games]: fromGame.gameReducer as any,\n  [ReducerNames.users]: fromUser.userReducer as any,\n  [ReducerNames.filters]: fromFilter.filterReducer as any,\n  [ReducerNames.general]: fromGeneral.generalReducer as any,\n};","import { Contract, FetchedDeals } from '@nx-bridge/interfaces-and-types';\nimport * as fromDealActions from '../actions/deal.actions';\n\nexport interface DealState {\n  dealsAsStrings: string[];\n  fetchedDeals: FetchedDeals;\n  currentlyViewingDeal: fromDealActions.CurrentlyViewingDeal;\n  currentlyViewingDealContract: Contract;\n}\n\nconst INITIAL_STATE: DealState = {\n  dealsAsStrings: [],\n  fetchedDeals: {},\n  currentlyViewingDeal: {} as fromDealActions.CurrentlyViewingDeal,\n  currentlyViewingDealContract: {prefix: '', htmlEntity: '', doubleMultiplier: 1},\n};\n\nexport function dealReducer(\n  state = INITIAL_STATE,\n  action: fromDealActions.DealActions,\n) {\n  switch (action.type) {\n    case fromDealActions.SET_DEALS_AS_STRING:\n      return {\n        ...state,\n        dealsAsStrings: action.payload,\n      };\n    case fromDealActions.SET_FETCHED_DEALS:\n      return {\n        ...state,\n        fetchedDeals: action.payload,\n      };\n    case fromDealActions.ADD_FETCHED_DEALS:\n      return {\n        ...state,\n        fetchedDeals: {...state.fetchedDeals, ...action.payload},\n      };\n    case fromDealActions.SET_CURRENTLY_VIEWING_DEAL:\n      return {\n        ...state,\n        currentlyViewingDeal: action.payload,\n      };\n    case fromDealActions.SET_CURRENTLY_VIEWING_DEAL_CONTRACT:\n      return {\n        ...state,\n        currentlyViewingDealContract: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n\n\n// ","/* eslint-disable no-case-declarations */\nimport { DealResult, PlayerHasCard, WonBy } from '@nx-bridge/interfaces-and-types';\nimport * as fromFilterActions from '../actions/filter.actions';\n\nexport const reducerDefaultValue = -1;\n\nexport interface FilterState {\n  [key: string]: any;\n  afterDate: number;\n  beforeDate: number;\n  contract: string;\n  dealResult: DealResult;\n  dealsThatMatchFilters: string[];\n  declarer: string;\n  double: number;\n  gameName: string;\n  isFilterSame: boolean;\n  openingBid: string;\n  playerHasCard: PlayerHasCard;\n  playerInGame: string[];\n  wonBy: WonBy;\n}\n\nconst INITIAL_STATE: FilterState = {\n  afterDate: 0,\n  beforeDate: 0,\n  contract: `${reducerDefaultValue}`,\n  dealResult: {amount: reducerDefaultValue, type: `${reducerDefaultValue}`} as DealResult,\n  dealsThatMatchFilters: [`${reducerDefaultValue}`],\n  declarer: `${reducerDefaultValue}`,\n  double: reducerDefaultValue,\n  gameName: `${reducerDefaultValue}`,\n  isFilterSame: false,\n  openingBid: `${reducerDefaultValue}`,\n  playerHasCard: { initial: [] },\n  playerInGame: [`${reducerDefaultValue}`],\n  wonBy: {amount: reducerDefaultValue, type: `${reducerDefaultValue}`} as WonBy,\n};\n\nexport function filterReducer(\n  state = INITIAL_STATE,\n  action: fromFilterActions.FilterActions\n) {\n  switch (action.type) {\n    case fromFilterActions.ADD_PLAYER_IN_GAME_FILTER:\n      const toAdd = [...state.playerInGame];\n      const indexToAdd = toAdd.findIndex(\n        (current) => current === `${reducerDefaultValue}`\n      );\n      if (indexToAdd !== -1) toAdd.splice(indexToAdd, 1);\n\n      return {\n        ...state,\n        playerInGame: [...toAdd, action.payload],\n      };\n    case fromFilterActions.ADD_PLAYER_HAS_CARD:\n      const newPlayerHasCard = { ...action.payload };\n      const usernameKey: string = Object.keys(newPlayerHasCard)[0];\n      const usernameValues = state.playerHasCard[usernameKey];\n\n      if (usernameValues) {\n        const usernameValuesCopy = [...usernameValues];\n        const valueToAdd = newPlayerHasCard[usernameKey];\n        usernameValuesCopy.push(...valueToAdd);\n        newPlayerHasCard[usernameKey] = [...usernameValuesCopy];\n      }\n\n      return {\n        ...state,\n        playerHasCard: { ...state.playerHasCard, ...newPlayerHasCard },\n      };\n    case fromFilterActions.REMOVE_PLAYER_HAS_CARD:\n      const { username, card } = action.payload;\n      const values = state.playerHasCard[username];\n      const index = values.findIndex((c) => c === card);\n      const newPlayerHasCardFilter = { [username]: [...values] };\n      newPlayerHasCardFilter[username].splice(index, 1);\n\n      if (newPlayerHasCardFilter[username].length === 0) {\n        const newState = { ...state.playerHasCard };\n        delete newState[username];\n        return {\n          ...state,\n          playerHasCard: newState,\n        };\n      }\n\n      return {\n        ...state,\n        playerHasCard: { ...state.playerHasCard, ...newPlayerHasCardFilter },\n      };\n    case fromFilterActions.REMOVE_PLAYER_IN_GAME_FILTER:\n      const newPlayerInGame = [...state.playerInGame];\n      const indexOfPlayerInGame = newPlayerInGame.findIndex(\n        (current) => action.payload === current\n      );\n      if (indexOfPlayerInGame !== -1)\n        newPlayerInGame.splice(indexOfPlayerInGame, 1);\n\n      return {\n        ...state,\n        playerInGame: newPlayerInGame,\n      };\n    case fromFilterActions.SET_AFTER_DATE:\n      return {\n        ...state,\n        afterDate: action.payload,\n      };\n    case fromFilterActions.SET_BEFORE_DATE:\n      return {\n        ...state,\n        beforeDate: action.payload,\n      };\n    case fromFilterActions.SET_CONTRACT_FILTER:\n      return {\n        ...state,\n        contract: action.payload,\n      };\n    case fromFilterActions.SET_DEAL_RESULT_FILTER:\n      const newDealResult = action.payload;\n      return {\n        ...state,\n        dealResult: isNaN(newDealResult.amount)\n          ? { amount: reducerDefaultValue, type: `${reducerDefaultValue}` }\n          : newDealResult,\n      };\n    case fromFilterActions.SET_DEALS_THAT_MATCH_FILTERS:\n      return {\n        ...state,\n        dealsThatMatchFilters: action.payload,\n      };\n    case fromFilterActions.SET_DECLARER_FILTER:\n      return {\n        ...state,\n        declarer: action.payload,\n      };\n    case fromFilterActions.SET_DOUBLE_FILTER:\n      return {\n        ...state,\n        double: action.payload,\n      };\n    case fromFilterActions.SET_GAME_NAME_FILTER:\n      return {\n        ...state,\n        gameName: action.payload,\n      };\n    case fromFilterActions.SET_IS_FILTER_SAME:\n      return {\n        ...state,\n        isFilterSame: action.payload,\n      };\n    case fromFilterActions.SET_OPENING_BID_FILTER:\n      return {\n        ...state,\n        openingBid: action.payload,\n      };\n    case fromFilterActions.SET_PLAYER_HAS_CARD:\n      return {\n        ...state,\n        playerHasCard: action.payload,\n      };\n    case fromFilterActions.SET_PLAYER_IN_GAME_FILTER:\n      return {\n        ...state,\n        playerInGame: action.payload,\n      };\n    case fromFilterActions.SET_WON_BY_FILTER:\n      const newWonBy = action.payload;\n      return {\n        ...state,\n        wonBy: isNaN(newWonBy.amount)\n          ? { amount: reducerDefaultValue, type: `${reducerDefaultValue}` }\n          : newWonBy,\n      };\n    default:\n      return state;\n  }\n}\n\n//\n","import { GameRelevant } from '@nx-bridge/interfaces-and-types';\nimport * as fromGameActions from '../actions/game.actions';\n\nexport interface GameState {\n  games: GameRelevant[];\n  currentlyDisplayingGames: GameRelevant[];\n  filteredGames: GameRelevant[];\n  currentlyViewingGame: fromGameActions.CurrentlyViewingGame;\n  isViewingGame: boolean;\n}\n\nconst INITIAL_STATE: GameState = {\n  games: [],\n  currentlyDisplayingGames: [] as GameRelevant[],\n  filteredGames: [] as GameRelevant[],\n  currentlyViewingGame: {} as fromGameActions.CurrentlyViewingGame,\n  isViewingGame: false,\n};\n\nexport function gameReducer(\n  state = INITIAL_STATE,\n  action: fromGameActions.GameActions\n) {\n  switch (action.type) {\n    case fromGameActions.SET_GAMES:\n      return {\n        ...state,\n        games: action.payload,\n      };\n    case fromGameActions.SET_CURRENTLY_VIEWING_GAME:\n      return {\n        ...state,\n        currentlyViewingGame: action.payload,\n      };\n    case fromGameActions.SET_CURRENTLY_DISPLAYING_GAMES:\n      return {\n        ...state,\n        currentlyDisplayingGames: action.payload,\n      };\n    case fromGameActions.SET_FILTERED_GAMES:\n      return {\n        ...state,\n        filteredGames: action.payload,\n      };\n    case fromGameActions.SET_IS_VIEWING_GAME:\n      return {\n        ...state,\n        isViewingGame: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","import * as fromGeneralActions from '../actions/general.actions';\n\nexport interface GeneralState {\n  batchNumber: number;\n  isLoading: boolean;\n  loadingError: string;\n  resultsPerPagePreference: string;\n  sortingPreference: string;\n}\n\nconst INITIAL_STATE: GeneralState = {\n  batchNumber: 0,\n  isLoading: false,\n  loadingError: '',\n  resultsPerPagePreference: '',\n  sortingPreference: '',\n};\n\nexport function generalReducer(\n  state = INITIAL_STATE,\n  action: fromGeneralActions.GeneralActions\n) {\n  switch (action.type) {\n    case fromGeneralActions.SET_BATCH_NUMBER:\n      if (isNaN(action.payload)) return state;\n      return {\n        ...state,\n        batchNumber: action.payload,\n      };\n    case fromGeneralActions.SET_IS_LOADING:\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    case fromGeneralActions.SET_LOADING_ERROR:\n      return {\n        ...state,\n        loadingError: action.payload,\n      };\n    case fromGeneralActions.SET_RESULTS_PER_PAGE_PREFERENCE:\n      return {\n        ...state,\n        resultsPerPagePreference: action.payload,\n      };\n    case fromGeneralActions.SET_SORTING_PREFERENCE:\n      return {\n        ...state,\n        sortingPreference: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","import { LocalStorageUserWithGames, UserIds } from \"@nx-bridge/interfaces-and-types\";\nimport * as UserActions from '../actions/user.actions';\n\nexport interface UserState {\n  userIds: UserIds;\n  currentlyViewingUser: LocalStorageUserWithGames;\n}\n\nconst INITIAL_STATE = {\n  userIds: {},\n  currentlyViewingUser: {} as LocalStorageUserWithGames,\n}\n\nexport const userReducer = (state = INITIAL_STATE, action: UserActions.UserActions ) => {\n  switch (action.type) {\n    case UserActions.SET_USERS:\n      return {\n        ...state,\n        userIds: action.payload,\n      }      \n    case UserActions.SET_CURRENTLY_VIEWING_USER:\n      return {\n        ...state,\n        currentlyViewingUser: action.payload,\n      }      \n  \n    default:\n      return state;\n  }\n}","module.exports = require(\"@angular/core\");","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/mongoose\");","module.exports = require(\"@nestjs/serve-static\");","module.exports = require(\"dotenv\");","module.exports = require(\"mongoose\");","module.exports = require(\"path\");","module.exports = require(\"tslib\");"],"sourceRoot":""}