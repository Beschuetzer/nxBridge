.filter-manager {
  max-height: auto;
  overflow-y: auto;
  width: 100%;
  height: 100%;
  transition: opacity $announce-self-animation-duration * 0.5
      $animation-easing-standard,
    height $announce-self-animation-duration * 1 $animation-easing-standard;

  @include respond($layout-breakpoint) {
    overflow-x: hidden;
    max-height: 33vh;
  }

  & label {
    display: flex !important;
    align-items: center;

    & input {
      margin-right: $default-font-size * 0.125;
    }
  }

  &__applied {
    position: sticky;
    top: 0;
    background-color: var(--color-black);
    z-index: 10;
    border-top: 1px solid rgba(var(--color-primary-4-rgb), 0.5);
    border-bottom: 1px solid rgba(var(--color-primary-4-rgb), 0.5);
    padding: $default-font-size * 0.25 0 $default-font-size * 0.25
      $default-font-size * 0.25;

    @include respond($layout-breakpoint) {
      padding: $default-font-size * 0.125 0 $default-font-size * 0.125
        $default-font-size * 0.125;
    }
  }

  &__filters {
    // border-bottom: 1px dashed var(--color-primary-4);
    display: flex;
    justify-content: space-between;
    align-items: center;

    @include respond($layout-breakpoint) {
      border-bottom: none;
      // margin: $default-font-size * 0.25 0 !important;
    }
  }

  &__filters {
    margin-bottom: 0 !important;

    @include respond($layout-breakpoint) {
      margin-bottom: $default-font-size * 0.25 !important;
    }

    & label:not(&__date label) {
      @include label-fx;
    }
  }
  &__details {
    margin: $default-font-size * 0.25 0 !important;

    & label:not(&__date label, .flex-column-start) {
      @include label-fx;
      &::before {
        // left: $default-font-size * 0.93;
        width: 90%;
      }
    }
  }

  &__details {
    &-checkboxes {
      // @include respond($layout-breakpoint) {
      display: grid;
      grid-template-columns: repeat(
        auto-fill,
        minmax($default-font-size * 8, 1fr)
      );

      @include respond($layout-breakpoint) {
        row-gap: $default-font-size * 0.125;
      }
      // }
    }

    &-filters {
      --max: calc(#{$default-font-size} * 6);
      margin: $default-font-size * 0.25 0;
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(var(--max), 1fr));
      column-gap: $default-font-size * 0.25;
      row-gap: $default-font-size * 0.25;

      @include respond($layout-breakpoint) {
        --max: calc(#{$default-font-size} * 6.375);
      }
    }

    // &-game {
    //   @include respond($layout-breakpoint) {
    //   }
    // }

    // &-deal,
    // &-game {
    //   // border-bottom: 1px dashed var(--color-primary-4);

    //   // @include respond($layout-breakpoint) {
    //   //   border-bottom: none;
    //   // }
    //   & > * {
    //     padding: 0 0 0 $default-font-size * 0.25;
    //   }

    //   @include respond($layout-breakpoint) {
    //     & > * {
    //       padding: $default-font-size * 0.25 0 0 $default-font-size * 0.25;
    //     }
    //   }

    // }

    & div:not(&-deal, &-game, &-checkboxes, &-filters) {
      height: max-content;
      border: 1px solid rgba(var(--color-primary-4-rgb), 0.5);
      border-radius: $default-font-size * 0.25;
      padding: $semantic-ui-text-default-font-size * 0 $default-font-size * 0.25
        $default-font-size * 0.25 $default-font-size * 0.25;
    }
  }

  &__header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    border-top: 1px solid rgba(var(--color-primary-4-rgb), 1);
    padding: $default-font-size * 0.25 0;

    @include respond($layout-breakpoint) {
      // justify-content: space-around;
    }
  }

  &__date {
    padding-top: $default-font-size * 0.25;

    & label {
      width: 100% !important;
      flex-direction: column;
      align-items: flex-start;
    }

    & input {
      padding: $default-font-size * 0.25 $default-font-size * 0.125 !important;
      // font-size: $default-font-size * .45 !important;
      // font-size: $default-font-size *  !important;
    }
  }

  &__player-has-card {
    padding: $default-font-size * 0.5 0;

    &-options {
      font-size: $semantic-ui-text-default-font-size * 1.25;
    }
  }

  &__item {
    display: flex;
    justify-content: space-between;
    align-items: center;

    // @include respond($layout-breakpoint) {
    //   display: grid;
    //   grid-template-columns: repeat(2, max-content);
    //   column-gap: $default-font-size * 0.5;
    //   justify-content: flex-start;
    // }

    &-container {
      position: relative;
      display: grid;
      grid-template-columns: min-content 1fr;
      column-gap: $semantic-ui-text-default-font-size * 0.25;

      & span {
        transition: color $animation-duration * 0.5 $animation-easing-standard;
      }

      & button {
        --before-opacity: .1;
        --before-scale-x: 0;
        --before-height: 0px;
        $transform-duration: $animation-duration * 0.5;

        &::before {
          content: '';
          position: absolute;
          bottom: 0;
          left: $default-font-size;
          right: 0;
          height: var(--before-height);
          background-color: rgba(var(--color-red-light-rgb), var(--before-opacity));
          transform: scaleX(var(--before-scale-x));
          transform-origin: left;
          transition: 
            background $animation-duration * 0.5 $animation-easing-standard $transform-duration,
            height $animation-duration * 0.5 $animation-easing-standard $transform-duration,
            transform $transform-duration $animation-easing-standard,
          ;
        }

        &:hover + * {
          color: var(--color-red-light) !important;
        }

        &:hover::before {
          --before-height: #{$default-font-size * .75};
          --before-opacity: 1;
          --before-scale-x: 1;
        }
      }
    }

    &-text {
      color: var(--color-green-light) !important;
    }

    &-options {
      display: flex;
      justify-content: space-between;
      width: 100%;

      & > * {
        margin: 0 !important;
      }
    }

    &-grid {
      --max: 1fr;
      --min: calc(#{$default-font-size} * 8.5);
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(var(--min), var(--max)));

      // @include respond($layout-breakpoint) {
      //   --max: 50%;
      //   & > *:nth-child(2n + 2) {
      //     & .filter-manager__item-container {
      //       // grid-template-columns: 1fr min-content;
      //       // width: max-content;
      //       // margin-left: auto;
      //     }

      //     & button {
      //       // order: 2;
      //     }
      //   }
      //   & > *:nth-child(2n + 2) .filter-manager__item {
      //     // justify-content: flex-end;
      //   }
      // }
    }

    & button {
      color: var(--color-red);
    }
  }

  &__button {
    margin: 0 !important;
    line-height: 0 !important;
    padding: $semantic-ui-text-default-font-size * 0.5
      $semantic-ui-text-default-font-size * 0.25 !important;
    @include filter-manager-button-colors;
  }

  &__add-button {
    @include filter-manager-button-colors;
    width: 100%;
    margin: $default-font-size * 0.25 0 0 0 !important;
  }
}
